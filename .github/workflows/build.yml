name: Build

on: [push]

env:
  CIBW_BUILD: cp37-*
  CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010
  CIBW_BEFORE_ALL_LINUX: bash ./prebuild_linux.sh
  CIBW_BEFORE_ALL_MACOS: brew install openblas # 3.10 numpy wheels not available yet, so need to get openblas (accelerate doesn't work?)
  CIBW_BEFORE_BUILD: python -m pip install numpy # needed at install time (should be in a pyproject.toml)
  CIBW_BEFORE_BUILD_MACOS: OPENBLAS="$(brew --prefix openblas)" python -m pip install numpy
  CIBW_TEST_COMMAND: python -c "import psychtoolbox as ptb; print(ptb.GetSecs())"
  CIBW_ARCHS_MACOS: x86_64 # universal2 # build wheels that'll work on M1 Macs

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-10.15]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.7"
          architecture: "x64"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.1.3
      - name: Build wheel
        run: |
          git submodule update --init --recursive
          cp prebuild_linux.sh psychtoolbox-3/prebuild_linux.sh
          cd psychtoolbox-3
          python -m cibuildwheel --output-dir ../dist
          cd ..
      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./dist

  build_source:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.7"
          architecture: "x64"

      - name: Build source
        run: |
          git submodule update --init --recursive
          python -m pip install setuptools wheel numpy
          cd psychtoolbox-3
          python setup.py sdist --formats=zip --dist-dir=../dist
          cd ..
      - name: Look
        run: ls dist
      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./dist

  source_install:
    needs: [build_source]
    name: Install source on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-10.15]
        py: ["3.7"]
    
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: ./dist

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: ${{ matrix.py }}
          architecture: "x64"
      
      - name: Install psychtoolbox from source
        shell: bash
        run: |
          if [ "$RUNNER_OS"  == "Linux" ]; then
              sudo apt install -y libxi-dev libusb-1.0-0-dev portaudio19-dev libasound2-dev
          fi
          python -m pip install numpy wheel
          python -m pip install dist/*.zip
      
      - name: Test source install
        run: python -c "import psychtoolbox as ptb; print(ptb.GetSecs())"

  test_limited:
    needs: [build_wheels]
    name: Test limited API wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-10.15]
        py: ["3.7", "3.8", "3.9", "3.10"]
    
    steps:
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: ${{ matrix.py }}
          architecture: "x64"
      
      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: ./dist
      
      - name: Install limited wheel
        run: python -m pip install --no-index --find-links=./dist/ psychtoolbox
      
      - name: Test limited wheel
        run: python -c "import psychtoolbox as ptb; print(ptb.GetSecs())"

  upload:
    runs-on: ubuntu-latest
    needs: [source_install, build_wheels]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: ./dist

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v1
        if: startsWith(github.event.ref, 'refs/tags')
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish distribution ðŸ“¦ to PyPI
        if: startsWith(github.event.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.pypi_password }}
