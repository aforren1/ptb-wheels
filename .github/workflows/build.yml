name: Build

on: [push]

env:
  CIBW_SKIP: cp34-* cp35-* *-manylinux_i686
  CIBW_BUILD: cp3?-*
  CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010
  CIBW_BEFORE_BUILD: python -m pip install numpy
  CIBW_BEFORE_BUILD_LINUX: bash ./prebuild_linux.sh && python -m pip install numpy
  CIBW_TEST_COMMAND: python -c "import psychtoolbox as ptb; print(ptb.GetSecs())"

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.8"
          architecture: "x64"

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==1.7.1
      - name: Copy portaudio script
        run: |
          cp prebuild_linux.sh psychtoolbox-3/prebuild_linux.sh
      - name: Build wheel
        run: |
          cd psychtoolbox-3
          python -m cibuildwheel --output-dir ../dist
          cd ..
      - name: Look
        run: |
          ls dist
      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./dist

  build_source:
    runs-on: ubuntu-latest
    needs: [run_tests]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.8"
          architecture: "x64"

      - name: Build source
        run: |
          python -m pip install setuptools wheel numpy
          python setup.py sdist --formats=zip
      - name: Look
        run: |
          ls dist
      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./dist
