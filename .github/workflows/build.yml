name: Build

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true

on: [push, pull_request]

env:
  CIBW_SKIP: '*musllinux*'
  CIBW_BUILD: 'cp39-*'
  CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
  CIBW_BEFORE_ALL_LINUX: bash ./cibw_before_all_linux.sh
  CIBW_TEST_COMMAND: bash ./cibw_test_command.sh
  CIBW_ARCHS_MACOS: x86_64 # universal2 # build wheels that'll work on M1 Macs
  CIBW_ARCHS_LINUX: auto64
  CIBW_ENVIRONMENT: PTB_LIMITED_WHEEL=1
  # libusb1.dylib distributed with PTB has a minimum target of 13
  CIBW_ENVIRONMENT_MACOS: CC=clang PTB_LIMITED_WHEEL=1 MACOSX_DEPLOYMENT_TARGET=13.0
  CIBW_BUILD_VERBOSITY: 1

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: "3.9"
          architecture: "x64"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.19.2
      - name: Build wheel
        run: |
          git submodule update --init --recursive
          cp -v cibw_*.sh psychtoolbox-3/
          cd psychtoolbox-3
          python -m cibuildwheel --archs native --output-dir ../dist
          cd ..
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./dist

  test_wheels:
    name: Test ${{ matrix.os }} ${{ matrix.python }} ${{ matrix.numpy}}
    runs-on: ${{ matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13]
        python: ['3.9', '3.12']
        include:
          - os: ubuntu-latest
            python: '3.9'
            numpy: '"numpy<2"'
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python }}"
          architecture: "x64"
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-${{ matrix.os }}
          path: ./dist
      - run: pip install dist/*.whl ${{ matrix.numpy }}
      - run: ${{ env.CIBW_TEST_COMMAND }}

  build_source:
    name: Build source on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: "3.9"
          architecture: "x64"

      - name: Build source
        run: |
          git submodule update --init --recursive
          python -m pip install build
          cd psychtoolbox-3
          python -m build --sdist --outdir=../dist
          cd ..
      - name: Look
        run: ls dist
      - name: Install Ubuntu deps
        if: contains(matrix.os, 'ubuntu')
        run: sudo apt-get install -y libusb-1.0-0-dev portaudio19-dev libasound2-dev libxi-dev
      - name: Install PTB
        run: python -m pip install -v dist/*.tar.gz
        shell: bash
      - name: Test PTB
        run: ${{ env.CIBW_TEST_COMMAND }}
      - uses: actions/upload-artifact@v4
        if: contains(matrix.os, 'ubuntu')
        with:
          name: wheels-sdist
          path: ./dist

  upload:
    runs-on: ubuntu-latest
    needs: [build_source, build_wheels]
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: ./dist
          merge-multiple: true

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: "3.9"
          architecture: "x64"

      - name: Install twine
        run: python -m pip install twine

      - name: Test uploadability
        run: python -m twine check --strict dist/*

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v1
        if: startsWith(github.event.ref, 'refs/tags')
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish distribution ðŸ“¦ to PyPI
        if: startsWith(github.event.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.pypi_password }}
